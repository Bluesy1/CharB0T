name: Leaderboard Pull
on:
  push:
    paths-ignore:
      - '**/_data/users.json**'
  workflow_dispatch:
    push:
      branches: gh-pages 
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  download-users:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U -r requirements.txt
      - name: Run sql script
        env:
          DB: ${{ secrets.DB }}
          DB_USER: ${{ secrets.DB_USER }}
          PASS: ${{ secrets.PASS }}
          HOST: ${{ secrets.HOST }}
          PORT: ${{ secrets.PORT }}
        run: |
          python db_to_json.py
          echo ${{ env.DO_COMMIT }}
      #- name: Push to GitHub
      #  if: ${{ env.DO_COMMIT == 'true' }}
      #  run: |
      #    git config user.name "GitHub Actions Bot"
      #    git config user.email "<>"
      #    git add .
      #    git commit -m "Update leaderboard"
      #    git push origin gh-pages
  # Build job
  build:
    runs-on: ubuntu-latest
    needs: download-users
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v1
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
