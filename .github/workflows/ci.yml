name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:

  maturin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: build-${{ hashFiles('**/Cargo.lock') }}
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release --sdist -o dist --find-interpreter -m charbot_rust/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          retention-days: 5
  rust-codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: test-${{ hashFiles('**/Cargo.lock') }}
      - name: Run tests
        run: |
          cd charbot_rust
          curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -
          rustup component add llvm-tools-preview
          cargo build
          cargo test --no-default-features
          ./grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing -o ../lcov.info
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'
          RUSTDOCFLAGS: '-Cpanic=abort'
          LLVM_PROFILE_FILE: 'GHA-%p-%m.profraw'
      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          files: ./lcov.info
          env_vars: OS,RUST
          fail_ci_if_error: false
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report_rust.txt
          verbose: false
          gcov: true
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Dependencies
        run: |
          pip install black
      - name: Black
        id: black
        run: black --check --verbose --line-length=120 .
  pyright:
    needs: [maturin, black, flake8]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Dependencies
        run: |
          pip install -U pip
          pip install wheel
          pip install -Ur requirements.txt
          pip install -Ur requirements-dev.txt
          find . -name "*.tar.gz" | xargs rm
          pip install wheels/*
      - name: Pyright
        id: pyright
        run: pyright charbot
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Dependencies
        run: |
          pip install flake8
      - name: Flake8
        id: flake8
        run: flake8 . --max-line-length=120 --indent-size=4
  codecov:
    needs: [maturin, black, flake8]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Dependencies
        run: |
          pip install -U pip
          pip install wheel
          pip install -Ur requirements.txt
          pip install -Ur requirements-dev.txt
          find . -name "*.tar.gz" | xargs rm
          pip install wheels/*
          pip install -e .
      - name: Run pytest
        id: pytest
        run: pytest --cov-report=xml:coverage/reports/coverage.xml --cov=charbot tests/ --cov-report=term --cov-config=pyproject.toml
      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: false
      - name: Report test coverage to DeepSource
        uses: deepsourcelabs/test-coverage-action@master
        with:
          key: python
          coverage-file: ./coverage/reports/coverage.xml
          dsn: ${{ secrets.DEEPSOURCE_DSN }}
